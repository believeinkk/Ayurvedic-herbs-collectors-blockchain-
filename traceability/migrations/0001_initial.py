# Generated by Django 5.2.6 on 2025-09-27 03:57

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Collector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collector_id', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('village', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=50)),
                ('license_number', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='HerbSpecies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('ashwagandha', 'Ashwagandha (Withania somnifera)'), ('tulsi', 'Tulsi (Ocimum tenuiflorum)'), ('brahmi', 'Brahmi (Bacopa monnieri)'), ('neem', 'Neem (Azadirachta indica)'), ('turmeric', 'Turmeric (Curcuma longa)'), ('ginger', 'Ginger (Zingiber officinale)'), ('amla', 'Amla (Phyllanthus emblica)')], max_length=50, unique=True)),
                ('scientific_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='CollectionEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('harvest_date', models.DateField()),
                ('gps_latitude', models.FloatField()),
                ('gps_longitude', models.FloatField()),
                ('quantity_kg', models.FloatField()),
                ('quality_grade', models.CharField(choices=[('A', 'Grade A'), ('B', 'Grade B'), ('C', 'Grade C')], max_length=10)),
                ('weather_conditions', models.CharField(max_length=100)),
                ('soil_ph', models.FloatField(blank=True, null=True)),
                ('organic_certified', models.BooleanField(default=False)),
                ('fair_trade_certified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('collector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traceability.collector')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traceability.herbspecies')),
            ],
        ),
        migrations.CreateModel(
            name='ProcessingBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(max_length=50, unique=True)),
                ('processing_facility', models.CharField(max_length=200)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('batch_size_kg', models.FloatField()),
                ('status', models.CharField(choices=[('processing', 'Processing'), ('quality_testing', 'Quality Testing'), ('completed', 'Completed'), ('rejected', 'Rejected')], default='processing', max_length=20)),
                ('qr_code', models.ImageField(blank=True, upload_to='qr_codes/')),
                ('collection_events', models.ManyToManyField(to='traceability.collectionevent')),
            ],
        ),
        migrations.CreateModel(
            name='ProcessingStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_type', models.CharField(choices=[('cleaning', 'Cleaning'), ('drying', 'Drying'), ('grinding', 'Grinding'), ('sieving', 'Sieving'), ('packaging', 'Packaging')], max_length=20)),
                ('temperature', models.FloatField(blank=True, help_text='Temperature in Celsius', null=True)),
                ('humidity', models.FloatField(blank=True, help_text='Humidity percentage', null=True)),
                ('duration_hours', models.FloatField(blank=True, null=True)),
                ('operator_name', models.CharField(max_length=100)),
                ('equipment_used', models.CharField(blank=True, max_length=200)),
                ('notes', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_steps', to='traceability.processingbatch')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='QualityTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('lab_name', models.CharField(max_length=200)),
                ('lab_license', models.CharField(max_length=100)),
                ('moisture_content', models.FloatField(help_text='Moisture percentage')),
                ('pesticide_residue', models.CharField(choices=[('none', 'None Detected'), ('low', 'Low Levels'), ('high', 'High Levels')], max_length=10)),
                ('heavy_metals', models.CharField(choices=[('pass', 'Within Limits'), ('fail', 'Exceeds Limits')], max_length=10)),
                ('microbial_count', models.IntegerField(help_text='CFU/g')),
                ('dna_verification', models.BooleanField(default=True, help_text='Species DNA verified')),
                ('active_compounds', models.JSONField(blank=True, default=dict)),
                ('test_status', models.CharField(choices=[('pending', 'Pending'), ('passed', 'Passed'), ('failed', 'Failed')], default='pending', max_length=10)),
                ('certificate_number', models.CharField(max_length=100, unique=True)),
                ('notes', models.TextField(blank=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quality_tests', to='traceability.processingbatch')),
            ],
        ),
    ]
